<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[高级语言程序设计 课程设计 学生成绩管理系统]]></title>
    <url>%2F2019%2F06%2F15%2F%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1-%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[功能导图 数据文件 password.txt student.txt subject.txt 源文件main.cpp #include &lt;cstdio&gt; #include &lt;cstdlib&gt; #include &lt;cstring&gt; #include &lt;iostream&gt; #include &lt;iomanip&gt; #include &lt;fstream&gt; #include &lt;vector&gt; #include &lt;map&gt; #include &lt;string&gt; #include &lt;algorithm&gt; #include &lt;windows.h&gt; #include &quot;data.h&quot; #include &quot;student.h&quot; #include &quot;subject.h&quot; #include &quot;system.h&quot; int main() { welcome(); login(); load(); do showMenu(); while (chooseFunc()); save(); system(&quot;pause&quot;); return 0; } 头文件data.h #pragma once using namespace std; struct Sub { string name; double weight; }; map&lt;int, Sub&gt; sub; //存储所有科目信息 struct Stu { string name, id; int claz; map&lt;int, int&gt; m; double gpa() { double suma = 0, sumb = 0; for (auto it = m.begin(); it != m.end(); it++) { suma += it-&gt;second * sub[it-&gt;first].weight; sumb += sub[it-&gt;first].weight; } return suma / sumb; } int sum() { int res = 0; for (auto it = m.begin(); it != m.end(); it++) res += it-&gt;second; return res; } }; vector&lt;Stu&gt; stu; //存储所有学生信息 vector&lt;Stu&gt; temp; //存储某次查询得到的学生信息 student.h #pragma once using namespace std; void stuInsert() { string name, id; char c; int claz, score; map&lt;int, int&gt; m; cout &lt;&lt; &quot;请输入学生信息，按回车键开始&quot; &lt;&lt; endl; getchar(); while ((c = getchar()) != &#39;0&#39;) { system(&quot;cls&quot;); m.clear(); cout &lt;&lt; &quot;姓名：&quot;; cin &gt;&gt; name; cout &lt;&lt; &quot;学号：&quot;; cin &gt;&gt; id; cout &lt;&lt; &quot;班级：&quot;; cin &gt;&gt; claz; for (auto it = sub.begin(); it != sub.end(); it++) { cout &lt;&lt; it-&gt;second.name &lt;&lt; &quot;成绩：&quot;; cin &gt;&gt; score; m[it-&gt;first] = score; } stu.push_back(Stu{ name, id, claz, m }); cout &lt;&lt; endl &lt;&lt; &quot;按回车键继续输入，输入0返回根目录&quot; &lt;&lt; endl; getchar(); } } void stuDelete() { menu: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;0\t返回根目录&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;1\t按指定学生编号逐个删除&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;2\t按指定班级编号批量删除&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; string id; int claz, ope; cin &gt;&gt; ope; switch (ope) { case 0: break; case 1: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要删除信息的学生编号：&quot;; while (cin &gt;&gt; id &amp;&amp; id != &quot;0&quot;) { bool flag = false; //标记是否查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) //遍历vector，逐个检验学生是否与指定编号匹配 { if (stu[i].id == id) { system(&quot;cls&quot;); flag = true; //查询到对象 cout &lt;&lt; &quot;请确认是否删除该学生的信息[Y/N]&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;姓名&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;学号&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;班级&quot;; for (auto it = sub.begin(); it != sub.end(); it++) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;second.name; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;总成绩&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;平均学分绩点&quot;; cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].name &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].id &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].claz; for (auto it = sub.begin(); it != sub.end(); it++) { if (stu[i].m.count(it-&gt;first)) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].m[it-&gt;first]; else cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;尚未录入&quot;; } cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].sum() &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].gpa(); cout &lt;&lt; endl; string ope; cin &gt;&gt; ope; if (ope == &quot;Y&quot; || ope == &quot;y&quot;) { stu.erase(stu.begin() + i); cout &lt;&lt; endl &lt;&lt; &quot;成功删除&quot; &lt;&lt; endl; } else cout &lt;&lt; endl &lt;&lt; &quot;取消删除&quot; &lt;&lt; endl; break; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学生编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要删除信息的学生编号：&quot;; } goto menu; case 2: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要删除信息的班级编号：&quot;; while (cin &gt;&gt; claz &amp;&amp; claz) { bool flag = false; //标记是否查询到对象 for (auto it = stu.begin(); it != stu.end();) //遍历vector，逐个检验学生是否属于指定班级 { if (it-&gt;claz == claz) { system(&quot;pause&quot;); system(&quot;cls&quot;); flag = true; //查询到对象 cout &lt;&lt; &quot;请确认是否删除该学生的信息[Y/N]&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;姓名&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;学号&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;班级&quot;; for (auto iter = sub.begin(); iter != sub.end(); iter++) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; iter-&gt;second.name; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;总成绩&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;平均学分绩点&quot;; cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;name &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;id &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;claz; for (auto iter = sub.begin(); iter != sub.end(); iter++) { if (it-&gt;m.count(iter-&gt;first)) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;m[iter-&gt;first]; else cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;尚未录入&quot;; } cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;sum() &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;gpa(); cout &lt;&lt; endl; string ope; cin &gt;&gt; ope; if (ope == &quot;Y&quot; || ope == &quot;y&quot;) { it = stu.erase(it); //迭代器stu.erase(it)指向被删除元素的下一个，利用其返回值避免当前迭代器失效 cout &lt;&lt; endl &lt;&lt; &quot;成功删除&quot; &lt;&lt; endl; } else { cout &lt;&lt; endl &lt;&lt; &quot;取消删除&quot; &lt;&lt; endl; it++; } } else it++; } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该班级编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要删除信息的班级编号：&quot;; } goto menu; default: cout &lt;&lt; &quot;指令无效，请重新输入！&quot; &lt;&lt; endl; system(&quot;pause&quot;); goto menu; } } int suborder; //存储某次按指定科目排序的科目次序 //以下为各种条件下的排序规则函数 bool cmp_nameAsc(const Stu &amp;a, const Stu &amp;b) { return a.name != b.name ? a.name &lt; b.name : a.id &lt; b.id; } bool cmp_nameDes(const Stu &amp;a, const Stu &amp;b) { return a.name != b.name ? a.name &gt; b.name : a.id &lt; b.id; } bool cmp_idAsc(const Stu &amp;a, const Stu &amp;b) { return a.id &lt; b.id; } bool cmp_idDes(const Stu &amp;a, const Stu &amp;b) { return a.id &gt; b.id; } bool cmp_sumAsc(Stu &amp;a, Stu &amp;b) { return a.sum() != b.sum() ? a.sum() &lt; b.sum() : a.id &lt; b.id; } bool cmp_sumDes(Stu &amp;a, Stu &amp;b) { return a.sum() != b.sum() ? a.sum() &gt; b.sum() : a.id &lt; b.id; } bool cmp_gpaAsc(Stu &amp;a, Stu &amp;b) { return a.gpa() != b.gpa() ? a.gpa() &lt; b.gpa() : a.gpa() &lt; b.gpa(); } bool cmp_gpaDes(Stu &amp;a, Stu &amp;b) { return a.gpa() != b.gpa() ? a.gpa() &gt; b.gpa() : a.gpa() &lt; b.gpa(); } bool cmp_subAsc(Stu &amp;a, Stu &amp;b) { int i = 0, sid; for (auto it = sub.begin(); it != sub.end() &amp;&amp; i &lt; suborder; it++, i++) sid = it-&gt;first; if (a.m.count(sid) &amp;&amp; b.m.count(sid)) return a.m[sid] != b.m[sid] ? a.m[sid] &lt; b.m[sid] : a.id &lt; b.id; return a.m.count(sid) ? false : b.m.count(sid) ? true : a.id &lt; b.id; } bool cmp_subDes(Stu &amp;a, Stu &amp;b) { int i = 0, sid; for (auto it = sub.begin(); it != sub.end() &amp;&amp; i &lt; suborder; it++, i++) sid = it-&gt;first; if (a.m.count(sid) &amp;&amp; b.m.count(sid)) return a.m[sid] != b.m[sid] ? a.m[sid] &gt; b.m[sid] : a.id &lt; b.id; return a.m.count(sid) ? true : b.m.count(sid) ? false : a.id &lt; b.id; } void print() //打印某次查询得到的学生信息 { cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;姓名&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;学号&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;班级&quot;; for (auto it = sub.begin(); it != sub.end(); it++) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;second.name; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;总成绩&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;平均学分绩点&quot;; cout &lt;&lt; endl &lt;&lt; endl; for (int i = 0; i &lt; (int)temp.size(); i++) { cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; temp[i].name &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; temp[i].id &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; temp[i].claz; for (auto it = sub.begin(); it != sub.end(); it++) { if (temp[i].m.count(it-&gt;first)) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; temp[i].m[it-&gt;first]; else cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;尚未录入&quot;; } cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; temp[i].sum() &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; temp[i].gpa() &lt;&lt; endl &lt;&lt; endl; } } void stuFind() { menu1: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;0\t返回根目录&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;1\t按指定学生姓名查询&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;2\t按指定学生编号查询&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;3\t按指定班级编号查询&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; string name, id; int claz, ope; cin &gt;&gt; ope; switch (ope) { case 0: break; case 1: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入学生姓名：&quot;; while (cin &gt;&gt; name &amp;&amp; name != &quot;0&quot;) { temp.clear(); bool flag = false; //标记是否查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].name == name) { flag = true; //查询到对象 temp.push_back(stu[i]); } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学生姓名！&quot; &lt;&lt; endl; else { system(&quot;cls&quot;); print(); } system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要查询的学生姓名：&quot;; } goto menu1; case 2: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入学生编号：&quot;; while (cin &gt;&gt; id &amp;&amp; id != &quot;0&quot;) { bool flag = false; //标记是否查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].id == id) { system(&quot;cls&quot;); flag = true; //查询到对象 cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;姓名&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;学号&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;班级&quot;; for (auto it = sub.begin(); it != sub.end(); it++) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;second.name; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;总成绩&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;平均学分绩点&quot;; cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].name &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].id &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].claz; for (auto it = sub.begin(); it != sub.end(); it++) { if (stu[i].m.count(it-&gt;first)) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].m[it-&gt;first]; else cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;尚未录入&quot;; } cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].sum() &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].gpa(); cout &lt;&lt; endl; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学生编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要查询的学生编号：&quot;; } goto menu1; case 3: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入班级编号：&quot;; while (cin &gt;&gt; claz &amp;&amp; claz) { temp.clear(); bool flag = false; //标记是否查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].claz == claz) { flag = true; //查询到对象 temp.push_back(stu[i]); } } if (!flag) //未查询到对象 { cout &lt;&lt; endl &lt;&lt; &quot;不存在该班级编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要查询的班级编号：&quot;; continue; } menu2: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;--------------------------------------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; setw(5) &lt;&lt; 0 &lt;&lt; &quot; 重新输入班级编号&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 1 &lt;&lt; &quot; 按学生姓名字典升序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 2 &lt;&lt; &quot; 按学生姓名字典降序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 3 &lt;&lt; &quot; 按学生编号升序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 4 &lt;&lt; &quot; 按学生编号降序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 5 &lt;&lt; &quot; 按总成绩升序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 6 &lt;&lt; &quot; 按总成绩降序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 7 &lt;&lt; &quot; 按平均学分绩点升序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; 8 &lt;&lt; &quot; 按平均学分绩点降序&quot; &lt;&lt; endl &lt;&lt; endl; int order = 9; for (auto it = sub.begin(); it != sub.end(); it++, order += 2) { cout &lt;&lt; setw(5) &lt;&lt; order &lt;&lt; &quot; 按&quot; &lt;&lt; it-&gt;second.name &lt;&lt; &quot;成绩升序&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; setw(5) &lt;&lt; order + 1 &lt;&lt; &quot; 按&quot; &lt;&lt; it-&gt;second.name &lt;&lt; &quot;成绩降序&quot; &lt;&lt; endl &lt;&lt; endl; } cout &lt;&lt; &quot;--------------------------------------------------&quot; &lt;&lt; endl; int ope; cin &gt;&gt; ope; switch (ope) { case 0: break; case 1: sort(temp.begin(), temp.end(), cmp_nameAsc); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 2: sort(temp.begin(), temp.end(), cmp_nameDes); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 3: sort(temp.begin(), temp.end(), cmp_idAsc); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 4: sort(temp.begin(), temp.end(), cmp_idDes); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 5: sort(temp.begin(), temp.end(), cmp_sumAsc); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 6: sort(temp.begin(), temp.end(), cmp_sumDes); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 7: sort(temp.begin(), temp.end(), cmp_gpaAsc); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; case 8: sort(temp.begin(), temp.end(), cmp_gpaDes); system(&quot;cls&quot;); print(); system(&quot;pause&quot;); goto menu2; default: if (ope &gt;= 9 &amp;&amp; ope &lt;= (int)sub.size() * 2 + 7) { if (ope &amp; 1) { suborder = (ope - 9) / 2 + 1; sort(temp.begin(), temp.end(), cmp_subAsc); } else { suborder = (ope - 10) / 2 + 1; sort(temp.begin(), temp.end(), cmp_subDes); } system(&quot;cls&quot;); print(); } else cout &lt;&lt; &quot;指令无效，请重新输入&quot; &lt;&lt; endl; system(&quot;pause&quot;); goto menu2; } system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要查询的班级编号：&quot;; } goto menu1; default: cout &lt;&lt; &quot;指令无效，请重新输入&quot; &lt;&lt; endl; system(&quot;pause&quot;); goto menu1; } } void stuModify() { menu: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;-------------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;0\t返回根目录&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;1\t修改指定学生编号&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;2\t修改指定班级编号&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;-------------------------&quot; &lt;&lt; endl; string id; int ope, score; cin &gt;&gt; ope; switch (ope) { case 0: break; case 1: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要修改的学生编号：&quot;; while (cin &gt;&gt; id &amp;&amp; id != &quot;0&quot;) { bool flag = false; //标记是否查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].id == id) { system(&quot;cls&quot;); flag = true; //查询到对象 cout &lt;&lt; &quot;该学生的当前信息如下：&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;姓名&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;学号&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;班级&quot;; for (auto it = sub.begin(); it != sub.end(); it++) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;second.name; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;总成绩&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;平均学分绩点&quot;; cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].name &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].id &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].claz; for (auto it = sub.begin(); it != sub.end(); it++) { if (stu[i].m.count(it-&gt;first)) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].m[it-&gt;first]; else cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;尚未录入&quot;; } cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].sum() &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; stu[i].gpa(); cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; &quot;请输入修改后的学生信息：&quot; &lt;&lt; endl &lt;&lt; endl; string name; int claz; cout &lt;&lt; &quot;姓名：&quot;; cin &gt;&gt; name; stu[i].name = name; cout &lt;&lt; &quot;学号：&quot;; cin &gt;&gt; id; stu[i].id = id; cout &lt;&lt; &quot;班级：&quot;; cin &gt;&gt; claz; stu[i].claz = claz; for (auto it = sub.begin(); it != sub.end(); it++) { cout &lt;&lt; it-&gt;second.name &lt;&lt; &quot;成绩：&quot;; cin &gt;&gt; score; stu[i].m[it-&gt;first] = score; } cout &lt;&lt; endl &lt;&lt; &quot;成功修改&quot; &lt;&lt; endl; break; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学生编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要修改的学生编号：&quot;; } goto menu; case 2: int claz, newnum; system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要修改的班级编号：&quot;; while (cin &gt;&gt; claz &amp;&amp; claz) { bool flag = false; //标记是否查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].claz == claz) { flag = true; //查询到对象 cout &lt;&lt; &quot;请输入修改后的班级编号：&quot;; cin &gt;&gt; newnum; stu[i].claz = newnum; cout &lt;&lt; endl &lt;&lt; &quot;成功修改&quot; &lt;&lt; endl; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该班级编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0返回上级目录）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;请继续输入需要修改的班级编号：&quot;; } goto menu; default: cout &lt;&lt; &quot;指令无效，请重新输入&quot; &lt;&lt; endl; system(&quot;pause&quot;); goto menu; } } subject.h #pragma once void subInsert() { string name; int sid; double weight; system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入新科目名称：&quot;; cin &gt;&gt; name; bool flag = false; //标记是否输入未重复编号 while (!flag) { flag = true; cout &lt;&lt; &quot;请输入新科目编号：&quot;; cin &gt;&gt; sid; for (auto it = sub.begin(); it != sub.end(); it++) { if (it-&gt;first == sid) { flag = false; cout &lt;&lt; &quot;该编号已存在！&quot; &lt;&lt; endl &lt;&lt; endl; break; } } } cout &lt;&lt; &quot;请输入新科目学分：&quot;; cin &gt;&gt; weight; sub[sid].name = name; sub[sid].weight = weight; cout &lt;&lt; endl &lt;&lt; &quot;成功增添&quot; &lt;&lt; endl; system(&quot;pause&quot;); } void subDelete() { menu: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;0\t返回根目录&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;1\t按指定编号删除学科&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;2\t按指定名称删除学科&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; string name; int ope, sid; cin &gt;&gt; ope; bool flag = false; switch (ope) { case 0: break; case 1: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要删除信息的学科编号：&quot;; cin &gt;&gt; sid; flag = false; //标记是否查询到对象 for (auto it = sub.begin(); it != sub.end(); it++) //遍历map，逐个检验学科是否与指定编号匹配 { if (it-&gt;first == sid) { flag = true; //查询到对象 sub.erase(it); for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].m.count(sid)) stu[i].m.erase(sid); } cout &lt;&lt; endl &lt;&lt; &quot;成功删除&quot; &lt;&lt; endl; break; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学科编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); goto menu; case 2: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要删除信息的学科名称：&quot;; cin &gt;&gt; name; flag = false; //标记是否查询到对象 for (auto it = sub.begin(); it != sub.end(); it++) //遍历map，逐个检验学科是否与指定名称匹配 { if (it-&gt;second.name == name) { flag = true; //查询到对象 for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].m.count(it-&gt;first)) stu[i].m.erase(it-&gt;first); } sub.erase(it); cout &lt;&lt; endl &lt;&lt; &quot;成功删除&quot; &lt;&lt; endl; break; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学科名称！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); goto menu; default: cout &lt;&lt; &quot;指令无效，请重新输入！&quot; &lt;&lt; endl; system(&quot;pause&quot;); goto menu; } } void subModify() { menu: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;0\t返回根目录&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;1\t按指定编号修改学科&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;2\t按指定名称修改学科&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;------------------------------&quot; &lt;&lt; endl; string name; int ope, sid; cin &gt;&gt; ope; double weight; bool flag = false; switch (ope) { case 0: break; case 1: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要修改信息的学科编号：&quot;; cin &gt;&gt; sid; flag = false; //标记是否查询到对象 for (auto it = sub.begin(); it != sub.end(); it++) //遍历map，逐个检验学科是否与指定编号匹配 { if (it-&gt;first == sid) { flag = true; //查询到对象 bool flagg = false; //标记是否输入未重复编号 while (!flagg) { flagg = true; cout &lt;&lt; &quot;请输入修改后的科目编号：&quot;; cin &gt;&gt; sid; for (auto it = sub.begin(); it != sub.end(); it++) { if (it-&gt;first == sid) { flagg = false; cout &lt;&lt; &quot;该编号已存在！&quot; &lt;&lt; endl &lt;&lt; endl; break; } } } for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].m.count(it-&gt;first)) { stu[i].m[sid] = stu[i].m[it-&gt;first]; stu[i].m.erase(it-&gt;first); } } cout &lt;&lt; &quot;请输入修改后的科目名称：&quot;; cin &gt;&gt; name; cout &lt;&lt; &quot;请输入修改后的科目学分：&quot;; cin &gt;&gt; weight; sub[sid] = Sub{ name, weight }; sub.erase(it); cout &lt;&lt; endl &lt;&lt; &quot;成功修改&quot; &lt;&lt; endl; break; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学科编号！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); goto menu; case 2: system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入需要修改信息的学科名称：&quot;; cin &gt;&gt; name; flag = false; //标记是否查询到对象 for (auto it = sub.begin(); it != sub.end(); it++) //遍历map，逐个检验学科是否与指定名称匹配 { if (it-&gt;second.name == name) { flag = true; //查询到对象 bool flagg = false; //标记是否输入未重复编号 while (!flagg) { flagg = true; cout &lt;&lt; &quot;请输入修改后的科目编号：&quot;; cin &gt;&gt; sid; for (auto it = sub.begin(); it != sub.end(); it++) { if (it-&gt;first == sid) { flagg = false; cout &lt;&lt; &quot;该编号已存在！&quot; &lt;&lt; endl &lt;&lt; endl; break; } } } for (int i = 0; i &lt; (int)stu.size(); i++) { if (stu[i].m.count(it-&gt;first)) { stu[i].m[sid] = stu[i].m[it-&gt;first]; stu[i].m.erase(it-&gt;first); } } cout &lt;&lt; &quot;请输入修改后的科目名称：&quot;; cin &gt;&gt; name; cout &lt;&lt; &quot;请输入修改后的科目学分：&quot;; cin &gt;&gt; weight; sub[sid] = Sub{ name, weight }; sub.erase(it); cout &lt;&lt; endl &lt;&lt; &quot;成功修改&quot; &lt;&lt; endl; break; } } if (!flag) //未查询到对象 cout &lt;&lt; endl &lt;&lt; &quot;不存在该学科名称！&quot; &lt;&lt; endl; system(&quot;pause&quot;); system(&quot;cls&quot;); goto menu; default: cout &lt;&lt; &quot;指令无效，请重新输入！&quot; &lt;&lt; endl; system(&quot;pause&quot;); goto menu; } } void subDisplay() //显示各项学科信息 { system(&quot;cls&quot;); cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;科目编号&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;科目名称&quot; &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; &quot;科目学分&quot; &lt;&lt; endl &lt;&lt; endl; for (auto it = sub.begin(); it != sub.end(); it++) cout &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;first &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;second.name &lt;&lt; std::right &lt;&lt; setw(15) &lt;&lt; it-&gt;second.weight &lt;&lt; endl &lt;&lt; endl; system(&quot;pause&quot;); } system #pragma once using namespace std; void welcome() { system(&quot;color 3f&quot;); cout &lt;&lt; &quot;--------------------------&quot; &lt;&lt; endl; cout &lt;&lt; &quot;欢迎使用学生信息管理系统！&quot; &lt;&lt; endl; cout &lt;&lt; &quot;--------------------------&quot; &lt;&lt; endl; cout &lt;&lt; &quot;正在加载，请稍后&quot; &lt;&lt; endl &lt;&lt; endl; for (int i = 0; i &lt; 20; i++) { Sleep(100); cout &lt;&lt; &quot;■&quot;; } cout &lt;&lt; endl; } void login() //实现登录功能 { system(&quot;pause&quot;); system(&quot;cls&quot;); ifstream file; file.open(&quot;./src/password.txt&quot;); if (!file) { cout &lt;&lt; &quot;数据异常，无法访问！&quot; &lt;&lt; endl; system(&quot;pause&quot;); exit(0); } string pass, input; file &gt;&gt; pass; file.close(); cout &lt;&lt; &quot;请输入密码：&quot;; while (cin &gt;&gt; input &amp;&amp; pass != input) //检验输入串与密码是否匹配 { if (input == &quot;0&quot;) //输入指令0，取消登录操作 { system(&quot;pause&quot;); exit(0); } system(&quot;cls&quot;); cout &lt;&lt; &quot;（输入0退出系统）&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;密码错误，请重试：&quot;; } cout &lt;&lt; endl &lt;&lt; &quot;登录成功！&quot; &lt;&lt; endl; system(&quot;pause&quot;); } void load() //从文件中读取全部学生信息和科目信息 { ifstream file; file.open(&quot;./src/subject.txt&quot;); if (!file) { cout &lt;&lt; &quot;数据异常，无法访问！&quot; &lt;&lt; endl; system(&quot;pause&quot;); exit(0); } int sid; while (file &gt;&gt; sid) file &gt;&gt; sub[sid].name &gt;&gt; sub[sid].weight; file.close(); file.open(&quot;./src/student.txt&quot;); if (!file) { cout &lt;&lt; &quot;数据异常，无法访问！&quot; &lt;&lt; endl; system(&quot;pause&quot;); exit(0); } string name, id; int claz, score, nsub; map&lt;int, int&gt; m; while (file &gt;&gt; name &gt;&gt; id &gt;&gt; claz &gt;&gt; nsub) { m.clear(); for (int i = 0; i &lt; nsub; i++) { file &gt;&gt; sid &gt;&gt; score; m[sid] = score; } stu.push_back(Stu{ name, id, claz, m }); } } void save() //程序运行结束前，将学生信息和科目信息写入文件 { ofstream student(&quot;./src/student.txt&quot;); for (int i = 0; i &lt; (int)stu.size(); i++) { student &lt;&lt; stu[i].name &lt;&lt; &quot; &quot; &lt;&lt; stu[i].id &lt;&lt; &quot; &quot; &lt;&lt; stu[i].claz &lt;&lt; &quot; &quot; &lt;&lt; (int)stu[i].m.size(); for (auto it = stu[i].m.begin(); it != stu[i].m.end(); it++) student &lt;&lt; &quot; &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; &quot; &lt;&lt; it-&gt;second; student &lt;&lt; endl; } student.close(); ofstream subject(&quot;./src/subject.txt&quot;); for (auto it = sub.begin(); it != sub.end(); it++) subject &lt;&lt; it-&gt;first &lt;&lt; &quot; &quot; &lt;&lt; it-&gt;second.name &lt;&lt; &quot; &quot; &lt;&lt; it-&gt;second.weight &lt;&lt; endl; } void showMenu() { system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入您需要进行的操作标号&quot; &lt;&lt; endl; cout &lt;&lt; &quot;---------------------&quot; &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; &quot;0\t退出系统&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;1\t修改密码&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;2\t增添学生信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;3\t删除学生信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;4\t修改学生信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;5\t查询学生信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;6\t增添科目信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;7\t删除科目信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;8\t修改科目信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;9\t显示科目信息&quot; &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; &quot;---------------------&quot; &lt;&lt; endl; } void changePass() { system(&quot;cls&quot;); cout &lt;&lt; &quot;请输入3-10位新密码：&quot; &lt;&lt; endl; string pass; while (cin &gt;&gt; pass &amp;&amp; (pass.length() &lt; 3 || pass.length() &gt; 10)) //检验新密码长度是否符合要求 { system(&quot;cls&quot;); cout &lt;&lt; &quot;密码不符合要求，请重新输入：&quot; &lt;&lt; endl; } ofstream file(&quot;./src/password.txt&quot;); file &lt;&lt; pass; file.close(); system(&quot;cls&quot;); cout &lt;&lt; &quot;密码修改成功，新密码为：&quot; &lt;&lt; pass &lt;&lt; endl; system(&quot;pause&quot;); } bool chooseFunc() { int ope; cin &gt;&gt; ope; switch (ope) { case 0: return false; case 1: changePass(); break; case 2: stuInsert(); break; case 3: stuDelete(); break; case 4: stuModify(); break; case 5: stuFind(); break; case 6: subInsert(); break; case 7: subDelete(); break; case 8: subModify(); break; case 9: subDisplay(); break; default: cout &lt;&lt; &quot;指令无效，请重新输入！&quot; &lt;&lt; endl; system(&quot;pause&quot;); } return true; }]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>课程设计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-2019 大学一年级总结]]></title>
    <url>%2F2019%2F06%2F13%2F2018-2019-%E5%A4%A7%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[比成功更重要的是要有内在的丰富和自己喜欢做的事情 时间飞逝，大一生活即将结束，我们也要成为人家的学长了。 这一年来的收获不少：丰富了一点社会经验，从一个幼稚的未成年人逐渐向成年人过渡；能做自己喜欢做的事情，从一个编程小白变成了ACMer；还结识了身边许多闪闪发光的dalao。 缺憾也挺多：没有花时间学习学校安排的课程；作息安排紊乱，常熬夜，没有花时间锻炼身体；阅读贫乏，没有接触人文社科。 学校课程方面对学校教务处课程安排表示不理解。作为计算机专业学生，为什么还得学大物（大雾）？为什么还得做物理实验？大学生增负虚空加课，全周全天满课了解一下？其实物理实验课不无好处：去高海拔的物院上课、交作业是一个锻炼身体的过程 #滑稽。 再就是形式主义的事情太多了：青年大学习、企业家论坛报告……虽然一直以来我都是抱着水一水的态度，但还是烦心。 说实话这一年来没怎么用心听课，虽说没有像某些人说的那样“必修课选逃，选修课必逃”，但身在曹营心在汉，感觉也差不多了：课上刷刷微博、逛逛知乎、看看CSDN，偶尔再敲敲代码……作业也必是不会写 #惭愧，貌似只有定期的英语作文会认真完成。 两个学期绩点平平，要不是考前临时突击铁定挂科==。看了一遍成绩单发现班上dalao众多，心想要想和他们通过学科绩点竞争保研名额难如登天。 很佩服那些擅长时间安排的同学，他们总是保持良好的作息习惯，早睡早起雷打不动，每天三点一线：宿舍–教室（图书馆/实验室）–食堂，并且总是能够利用碎片化时间学习，不受各种外界因素干扰。 我的室友、ACM队友涵哥就是一个典范。他曾给我分享过一个故事，出自《人性的弱点》。 Image1 Image2 别把工作当成负担，无论它是否是你所热爱的。 对我来说虽然拼绩点已经没有意义，但尽量学好各学科还是很有必要的。高数、线代、离散、数电……这些数理课程都很重要，是将来各大CS专业课程的基础。在此立下flag：下学期好好学习。 科研竞赛方面在上大学之前没有编程语言基础，对OI、ICPC等等更是一无所闻。在袁老师的引导下，第一学期循序渐进地学习了C语言程序设计，开始接触ACM。初学C语言那段时间是痛并快乐着的：老师每次在PTA上布置的题集得花一两天时间并且熬夜才能做完，肝完几套题下来编程水平也上去了，还是挺有成就感的。 ACM竞赛主要考察选手的数据结构和算法能力，但是要通过代码实现它们首先得有扎实的程序设计基础。在学习了一个学期的C语言之后，我和几个同学约定，利用寒假时间刷完了PAT乙级的往年题集。一共95道题，每天3-5道，不到一个月就能完结。PAT乙级过关，差不多便掌握了最基本的数据存储结构和相关算法，初步具备了问题抽象和建模的能力。所以如今我总是安利身边编程基础稍薄弱的同学：快去刷PAT！在寒假刷题的过程中发现了柳神的博客，通过学习她总结的《从C语言转C++简明教程》上手了STL，鸟枪换大炮。柳神的题解十分简明，并且算法高效。有时候做题没有思路或者AC了但觉得自己的代码冗长，思路不够清晰，都应该向她学习一下。 安利一波柳神的博客：https://blog.csdn.net/liuchuohttps://www.liuchuo.net/ 这学期开学后先后参加了PAT、CCCC-GPLT、ACM校内新星赛、蓝桥杯省赛。之后又和两位dalao组了队，参加了校赛、市赛、省赛。讲真，搞ACM竞赛是一件高投入但低回报的事情。提高水平的一个必要条件是花大量的时间刷大量的题，有时候要想学会一个新算法、解决一道题得花上一整天。在我看来编程是一门可以锻炼人的逻辑思维能力的艺术，我已经做好吊死在ACM这棵树上的打算了（这话听起来是不是很耳熟233）。 目前学到的一些基础数据结构与算法，只能应付一些水题。接下来的计划是暑假留校集训，这对我们新队员来说肯定会是一次很大的提升。 这里有一份别人收集整理的kuangbin题单，希望有朝一日能够刷完。https://vjudge.net/article/752 第二学期加入了一个高富帅学长带队的关于AI音乐的国创科研项目。当初申请加入项目的时候，我说我有相对音感，学长连面试都没有就录用我了（可想而知学长多么缺人）。加入项目之后主要是做些搬砖的活：收集乐谱、帮助完成数据集之类的，没有多少技术含量，下学期学完Java之后也许能在软件开发方面帮点忙。跟着去小学里做过推广，发传单、给小朋友做乐理普及之类的。还有一次路边地推的经历（其实更像是街头卖艺）。后来学长又把我拉进了他的公司，任命我为项目经理233，还给了我股份，看来以后要多为学长卖命了555（误）。 其他方面貌似没有什么特别的经历。清明小长假和室友一起去青岛玩了两天，五一小长假又把威海几个重要的景点逛了逛，挺快乐的。 一年来没看几本书，阅读贫乏所以语言贫乏。《未来简史》挺nice，但还没看完。在心情低落的那段时间，好友推荐我看了卢思浩的《愿有人陪你颠沛流离》。 比成功更重要的是要有内在的丰富和自己喜欢做的事情。 《啊哈！算法》、《算法竞赛入门经典》入门ACM不错（在我们宿舍紫书人手一本）。前些天又从祥神那里嫖来了《挑战程序设计竞赛》，要花时间啃。原版《C程序设计语言》买来至今还没翻过，陪着《Python3网络爬虫开发实战》在书架上吃灰。 一年来电影电视剧看了不少，以科幻、惊悚、悬疑和喜剧为主。看过的电影大都是爆米花式，没有几部是值得回味的。对漫威电影宇宙还不大明了，以后找时间补。在手里VPS还能用时，看了Netflix出品的一些好剧：反乌托邦《黑镜》、交互式电影《黑镜：潘达斯奈基》、成人向《性爱自修室》、科幻惊悚《怪奇物语》、血腥暴力动画《爱、死亡和机器人》，还有BBC的《9号秘事》、《神探夏洛克》。听说明年出神夏第五季，期待。暑假前追《长安十二时辰》，难得的国产好剧。 生活不能没有音乐，但歌单类型从以前的摇滚、电音变成了民谣、古典。华语流行音乐早听腻了，也许因为4536251烂大街？最近循环次数最多的几首纯音乐：Flower Dance、Heart in a Bottle、Cut in love（隐形守护者插曲）、Andhadhun Theme 02（调音师插曲）。上大学之后就再没玩过乐器，以前那些半会不会的怕是都忘光了。想弄块MIDI键盘耍耍但太贵了舍不得买，GarageBand也还没弄明白，终究和他们玩音乐的比不了啊。 旅游相册团体程序设计天梯赛 2019.03.30 中国石油大学（华东） 山东大学（威海）第六届大学生ACM程序设计竞赛 2019.04.13 威海市第四届大学生ACM程序设计竞赛 2019.04.20 北京交通大学（威海） 第十届山东省大学生ACM程序设计竞赛 2019.05.11-12 济南大学]]></content>
      <categories>
        <category>Daily</category>
      </categories>
      <tags>
        <tag>大一总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F06%2F13%2FHello-World%2F</url>
    <content type="text"><![CDATA[这是我的第一篇博文入坑Github，成功搭建Hexo博客！在此要感谢hwr dalao]]></content>
      <categories>
        <category>Daily</category>
      </categories>
  </entry>
</search>
